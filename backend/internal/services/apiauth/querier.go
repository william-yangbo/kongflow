// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package apiauth

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateOrganizationAccessToken(ctx context.Context, arg CreateOrganizationAccessTokenParams) (OrganizationAccessTokens, error)
	CreatePersonalAccessToken(ctx context.Context, arg CreatePersonalAccessTokenParams) (PersonalAccessTokens, error)
	// Organization Access Tokens queries - trigger.dev OAT alignment
	FindOrganizationAccessToken(ctx context.Context, token string) (OrganizationAccessTokens, error)
	FindOrganizationAccessTokenWithOrg(ctx context.Context, token string) (FindOrganizationAccessTokenWithOrgRow, error)
	// Personal Access Tokens queries - trigger.dev PAT alignment
	FindPersonalAccessToken(ctx context.Context, token string) (PersonalAccessTokens, error)
	FindPersonalAccessTokenWithUser(ctx context.Context, token string) (FindPersonalAccessTokenWithUserRow, error)
	ListOrganizationAccessTokensByOrg(ctx context.Context, organizationID pgtype.UUID) ([]OrganizationAccessTokens, error)
	ListPersonalAccessTokensByUser(ctx context.Context, userID pgtype.UUID) ([]PersonalAccessTokens, error)
	RevokeOrganizationAccessToken(ctx context.Context, arg RevokeOrganizationAccessTokenParams) error
	RevokePersonalAccessToken(ctx context.Context, arg RevokePersonalAccessTokenParams) error
	UpdateOrgTokenLastUsed(ctx context.Context, id pgtype.UUID) error
	UpdatePersonalTokenLastUsed(ctx context.Context, id pgtype.UUID) error
}

var _ Querier = (*Queries)(nil)
